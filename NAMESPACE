
importFrom("graphics", "abline", "matplot", "plot",'regtools')
importFrom("stats", "binomial", "coef", "cor", "cov", "glm", "lm",
             "loglin", "na.omit", "numericDeriv", "predict", "rbinom",
             "var")

S3method(predict,qeLogit)
S3method(predict,qeLin)
S3method(predict,qeKNN)
S3method(predict,qeRF)
S3method(predict,qeRFranger)
S3method(predict,qeRFgrf)
S3method(predict,qeskRF)
S3method(predict,qeSVM)
S3method(predict,qeSVMliquid)
S3method(predict,qeskSVM)
S3method(predict,qeGBoost)
S3method(predict,qeAdaBoost)
S3method(predict,qeNeural)
S3method(predict,qePolyLin)
S3method(predict,qePolyLog)
S3method(predict,qeLASSO)
S3method(predict,qeDT)
S3method(predict,qeParallel)
S3method(plot,qeLASSO)
S3method(plot,qeRF)
S3method(plot,qeDT)
S3method(plot,qeFT)
S3method(plot,doubleD)
S3method(print,qeDT)
S3method(predict,qePolyLASSO)
S3method(predict,qeIso)
S3method(predict,qePCA)
S3method(predict,qeUMAP)
S3method(predict,qeTS)
S3method(predict,qeText)
S3method(predict,qeKNNna)
S3method(predict,qelightGBoost)
S3method(predict,qeLinKNN)

export(
   qePCA,qeUMAP,qeRF,qeRFgrf,qeRFranger,qeskRF,qeDT,
   qeLogit,qeLin,qeKNN,qeSVM,qeGBoost,qeAdaBoost,
   qeNeural,qeLASSO,qeCompare,qeFT,qeROC,
   qePolyLin,qePolyLog,qePolyLASSO,qeSVMliquid,qeskSVM,
   qeParallel,qeIso,qeTS,qeText,buildQEcall,splitData,
   getRow1,predictHoldout,qelightGBoost,
   checkNumericNames,prepend,makeAllNumeric,getXY,
   doubleD,qeFOCI,qeKNNna,qeLinKNN)
